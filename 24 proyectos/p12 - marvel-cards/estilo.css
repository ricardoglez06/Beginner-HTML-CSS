body {
    height: 100vh;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    height: 60%;
    max-width: 100%;
    position: relative;
}

.card {
    height: 100%;
    width: 300px;
    margin: 30px 30px;
    border-radius: 25px;
    display: flex;
    justify-content: center;
    overflow: hidden;
    position: relative;
}

.loki {
    background: url(https://i.redd.it/g7hctzuylr661.jpg);
    background-position: center;
    background-size: cover;
}

.thor {
    background: url(https://mir-s3-cdn-cf.behance.net/project_modules/fs/06a37655637055.598c827555e3d.jpg);
    background-position: center;
    background-size: cover;
}

.ironman {
    background: url(https://images.meesho.com/images/products/275761192/46uaj_512.webp);
    background-position: center;
    background-size: cover;
}

.card-bottom{
    width: 300px;
    height: fit-content;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    top: 500px;
    font-family: sans-serif;
    font-weight: bold;
    color: rgb(255, 255, 255);
    transition: transform 1s;
    z-index: 1;
}


.title {
    font-size: 50px;
}

.icons {
    width: 150px;
    display: flex;
    justify-content: space-evenly;
    margin-top: 10px;
}

.icons .fa {
    color: white;
    font-size: 25px;
}

/*-------------------------------------*/
/*Cuando un elemento hijo tiene position: absolute;, se posiciona con respecto al elemento padre más cercano que tiene una propiedad de posición diferente de static. 
Si no hay tal elemento, se posicionará con respecto al elemento <html> o al <body>, dependiendo de la estructura del documento.

Entonces, al establecer position: relative; en el contenedor (elemento padre), estás indicando que el elemento hijo con position: absolute; se posicione con respecto a 
las dimensiones y la posición del contenedor, y no con respecto al <html> o <body>. Esto es lo que permite que el pseudo-elemento :after en tu caso tome como referencia las 
medidas de .loki.*/


.loki:hover .card-bottom{
    transform: translateY(-200px);
}

.loki::after {
    content: "";
    width: 300px;
    height: 250px;
    bottom: -250px;
    position: absolute;
    border-bottom-left-radius: 25px;
    border-bottom-right-radius: 25px;  
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border:1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    transition: bottom 1s;
}

.loki:hover::after {
    bottom: 0;
}

.thor:hover .card-bottom{
    transform: translateY(-200px);
}

.thor::after {
    content: "";
    width: 300px;
    height: 250px;
    bottom: -250px;
    position: absolute;
    border-bottom-left-radius: 25px;
    border-bottom-right-radius: 25px;  
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border:1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    transition: bottom 1s;
}

.thor:hover::after {
    bottom: 0;
}

.ironman:hover .card-bottom{
    transform: translateY(-200px);
}

.ironman::after {
    content: "";
    width: 300px;
    height: 250px;
    bottom: -250px;
    position: absolute;
    border-bottom-left-radius: 25px;
    border-bottom-right-radius: 25px;  
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border:1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    transition: bottom 1s;
}

.ironman:hover::after {
    bottom: 0;
}
